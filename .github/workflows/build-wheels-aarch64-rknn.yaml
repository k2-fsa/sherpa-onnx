name: build-wheels-aarch64-rknn

on:
  push:
    branches:
      - wheel
  workflow_dispatch:

concurrency:
  group: build-wheels-aarch64-rknn-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels_aarch64_rknn:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} ${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04-arm]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update version
        shell: bash
        run: |
          ./new-release.sh
          git diff .

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download rknn-toolkit2
        shell: bash
        run: |
          git clone --depth 1 https://github.com/airockchip/rknn-toolkit2

      - name: Build sherpa-onnx
        uses: addnab/docker-run-action@v3
        with:
            image: quay.io/pypa/manylinux_2_28_aarch64
            # image: quay.io/pypa/manylinux2014_aarch64 # it does not provide GLIBCXX 3.4.21+
            options: |
              --volume ${{ github.workspace }}/:/k2-fsa/sherpa-onnx
            shell: bash
            run: |
              echo "config: ${{ matrix.config }}"
              uname -a
              which gcc

              gcc --version
              g++ --version

              find /opt -name "python*"

              py=${{ matrix.python-version }}

              for v in $(seq 0 99); do
                if [ -f /opt/_internal/cpython-$py.$v/bin/python3 ]; then
                  py=/opt/_internal/cpython-$py.$v/bin/python3
                  break
                fi
              done

              # there is
              # py=/opt/_internal/cpython-3.13.3-nogil/bin/python3
              #
              echo "py: $py"

              $py --version

              $py -m venv my-py

              python3 --version
              which python3

              source ./my-py/bin/activate

              python3 --version
              which python3

              python3 -m pip install wheel twine setuptools

              echo "pwd"

              cd /k2-fsa/sherpa-onnx/

              ls -lh

              cmake --version

              echo "config: ${{ matrix.config }}"
              uname -a
              echo "pwd"

              git clone --depth 1 --branch v1.2.12 https://github.com/alsa-project/alsa-lib
              pushd alsa-lib
              ./gitcompile
              popd

              ls -lh $PWD/alsa-lib/src/.libs

              strings $PWD/alsa-lib/src/.libs/libasound.so.2.0.0 | grep "^GLIBC"

              export CPLUS_INCLUDE_PATH=$PWD/alsa-lib/include:$CPLUS_INCLUDE_PATH
              export SHERPA_ONNX_ALSA_LIB_DIR=$PWD/alsa-lib/src/.libs

              export SHERPA_ONNX_RKNN_TOOLKIT2_PATH=$PWD/rknn-toolkit2
              export SHERPA_ONNX_RKNN_TOOLKIT2_LIB_DIR=$SHERPA_ONNX_RKNN_TOOLKIT2_PATH/rknpu2/runtime/Linux/librknn_api/aarch64
              export CPLUS_INCLUDE_PATH=$SHERPA_ONNX_RKNN_TOOLKIT2_PATH/rknpu2/runtime/Linux/librknn_api/include:$CPLUS_INCLUDE_PATH

              export SHERPA_ONNX_ENABLE_ALSA=1

              export SHERPA_ONNX_CMAKE_ARGS="-DSHERPA_ONNX_ENABLE_RKNN=ON"
              python3 setup.py bdist_wheel

              mv dist wheelhouse

      - name: Display results
        shell: bash
        run: |
          ls -lh wheelhouse

      - name: Fix wheel name
        shell: bash
        run: |
          python3 -m pip install auditwheel

          auditwheel show ./wheelhouse/*.whl

          auditwheel repair --help

          auditwheel --verbose repair --plat manylinux_2_27_aarch64 \
            --exclude librknnrt.so \
            --exclude libasound.so.2 \
            -w ./dist ./wheelhouse/*.whl

          ls -lh dist/*.whl

      - name: Show glibc versions
        shell: bash
        run: |
          mkdir t
          cp dist/*.whl t
          cd t
          unzip ./*.whl
          strings sherpa_onnx-*.data/data/bin/sherpa-onnx | grep GLIBC

      - name: Publish to huggingface
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        uses: nick-fields/retry@v3
        with:
          max_attempts: 20
          timeout_seconds: 200
          shell: bash
          command: |
            git config --global user.email "csukuangfj@gmail.com"
            git config --global user.name "Fangjun Kuang"

            rm -rf huggingface
            export GIT_LFS_SKIP_SMUDGE=1
            export GIT_CLONE_PROTECTION_ACTIVE=false

            SHERPA_ONNX_VERSION=$(grep "SHERPA_ONNX_VERSION" ./CMakeLists.txt  | cut -d " " -f 2  | cut -d '"' -f 2)
            echo "SHERPA_ONNX_VERSION $SHERPA_ONNX_VERSION"

            d=rknn/$SHERPA_ONNX_VERSION/

            git clone https://csukuangfj:$HF_TOKEN@huggingface.co/csukuangfj/sherpa-onnx-wheels huggingface
            cd huggingface
            git fetch
            git pull
            git merge -m "merge remote" --ff origin main

            mkdir -p $d

            cp -v ../dist/*.whl $d/

            git status
            git add .
            git commit -m "add more wheels"
            git push https://csukuangfj:$HF_TOKEN@huggingface.co/csukuangfj/sherpa-onnx-wheels main

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.python-version }}
          path: ./dist/*.whl
