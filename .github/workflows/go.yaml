name: linux

on:
  push:
    branches:
      - master
      - go-api-2
    tags:
      - '*'
  pull_request:
    branches:
      - master

  workflow_dispatch:

concurrency:
  group: go-${{ github.ref }}
  cancel-in-progress: true

jobs:
  go:
    name: go ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.20'

      - name: Display go version
        shell: bash
        run: |
          go version
          go env GOPATH
          go env GOARCH

      - name: Set up MinGW
        if: matrix.os == 'windows-latest'
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64

      - name: Show gcc
        if: matrix.os == 'windows-latest'
        run: |
          gcc --version

      - name: Copy DLLs for windows
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          cd go-api-examples\non-streaming-decode-files
          go mod tidy
          copy C:\Users\runneradmin\go\pkg\mod\github.com\k2-fsa\sherpa-onnx-go-windows*\lib\x86_64-pc-windows-gnu\*.dll .
          dir .

      - name: Test non-streaming decoding files
        shell: bash
        run: |
          cd go-api-examples/non-streaming-decode-files
          ls -lh
          go mod tidy
          cat go.mod
          go build
          ls -lh

          echo $PWD
          if [[ ${{ matrix.os }} == windows-latest ]]; then
            ls -lh /C/Users/runneradmin/go/pkg/mod/github.com/k2-fsa/
            ls -lh /C/Users/runneradmin/go/pkg/mod/github.com/k2-fsa/*
            cp -v /C/Users/runneradmin/go/pkg/mod/github.com/k2-fsa/sherpa-onnx-go-windows*/lib/x86_64-pc-windows-gnu/*.dll .
          fi
          ls -lh

          git lfs install

          echo "Test transducer"
          git clone https://huggingface.co/csukuangfj/sherpa-onnx-zipformer-en-2023-06-26
          ./run-transducer.sh
          rm -rf sherpa-onnx-zipformer-en-2023-06-26

          echo "Test paraformer"
          git clone https://huggingface.co/csukuangfj/sherpa-onnx-paraformer-zh-2023-03-28
          ./run-paraformer.sh
          rm -rf sherpa-onnx-paraformer-zh-2023-03-28

          echo "Test NeMo CTC"
          git clone https://huggingface.co/csukuangfj/sherpa-onnx-nemo-ctc-en-conformer-medium
          ./run-nemo-ctc.sh
          rm -rf sherpa-onnx-nemo-ctc-en-conformer-medium
