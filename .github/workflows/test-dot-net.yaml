name: test-dot-net

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

  workflow_dispatch:

concurrency:
  group: test-dot-net
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test-dot-net:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        shell: bash
        run: |
          python3 -m pip install --upgrade pip Jinja2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            7.0.x

      - name: Check dotnet
        run: dotnet --info

      - name: Build
        shell: bash
        run: |
          cd scripts/dotnet
          ./run.sh

          ls -lh /tmp

      - name: Copy files
        shell: bash
        run: |
          cp -v scripts/dotnet/examples/offline-decode-files.csproj dotnet-examples/offline-decode-files/
          cp -v scripts/dotnet/examples/online-decode-files.csproj dotnet-examples/online-decode-files/
          cp -v scripts/dotnet/examples/speech-recognition-from-microphone.csproj dotnet-examples/speech-recognition-from-microphone/

          ls -lh /tmp

      - name: Decode a file
        shell: bash
        run: |
          cd dotnet-examples/

          cd online-decode-files
          ./run-transducer.sh
          ./run-paraformer.sh

          cd ../offline-decode-files
          ./run-nemo-ctc.sh
          ./run-paraformer.sh
          ./run-zipformer.sh
          ./run-whisper.sh
          ./run-tdnn-yesno.sh
