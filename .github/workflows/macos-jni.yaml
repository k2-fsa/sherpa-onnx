name: macos-jni

on:
  push:
    branches:
      - jni
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

  workflow_dispatch:

concurrency:
  group: macos-jni-${{ github.ref }}
  cancel-in-progress: true

jobs:
  macos_jni:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        arch: [arm64, x86_64]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '21'

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}-${{ matrix.arch }}

      - name: Configure CMake
        shell: bash
        run: |
          export CMAKE_CXX_COMPILER_LAUNCHER=ccache
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          cmake --version

          mkdir build
          cd build
          arch=${{ matrix.arch }}

          cmake \
            -D BUILD_SHARED_LIBS=ON \
            -D CMAKE_BUILD_TYPE=Release \
            -D CMAKE_OSX_ARCHITECTURES=$arch \
            -D SHERPA_ONNX_ENABLE_JNI=ON \
            -DCMAKE_INSTALL_PREFIX=./install \
            ..

      - name: Build sherpa-onnx for macos
        shell: bash
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

          cd build
          make -j2
          make install

          ls -lh lib
          ls -lh bin

          file ./bin/sherpa-onnx

          rm -rf ./install/lib/pkgconfig
          rm -rf ./install/lib/share
          rm -rf ./install/lib/cargs.h
          rm -rf ./install/include/cargs.h
          rm -rf ./install/lib/libcargs.dylib

      - uses: actions/upload-artifact@v4
        with:
          name: release-jni-macos-${{ matrix.arch }}
          path: build/install/*

      - name: Copy files
        shell: bash
        run: |
          du -h -d1 .
          SHERPA_ONNX_VERSION=v$(grep "SHERPA_ONNX_VERSION" ./CMakeLists.txt  | cut -d " " -f 2  | cut -d '"' -f 2)

          arch=${{ matrix.arch }}
          dst=sherpa-onnx-${SHERPA_ONNX_VERSION}-osx-$arch-jni
          mkdir -p $dst

          cp -a build/install/bin $dst/
          cp -a build/install/lib $dst/
          cp -a build/install/include $dst/

          brew install tree

          tree $dst

          tar cjvf ${dst}.tar.bz2 $dst
          du -h -d1 .

      - name: Publish to huggingface
        if: (github.repository_owner == 'csukuangfj' || github.repository_owner == 'k2-fsa') && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        uses: nick-fields/retry@v3
        with:
          max_attempts: 20
          timeout_seconds: 200
          shell: bash
          command: |
            git config --global user.email "csukuangfj@gmail.com"
            git config --global user.name "Fangjun Kuang"

            rm -rf huggingface
            export GIT_CLONE_PROTECTION_ACTIVE=false
            GIT_LFS_SKIP_SMUDGE=1 git clone https://huggingface.co/csukuangfj/sherpa-onnx-libs huggingface

            cd huggingface
            mkdir -p jni

            cp -v ../sherpa-onnx-*.tar.bz2 ./jni

            git status
            git lfs track "*.bz2"

            git add .

            git commit -m "add more files"

            git push https://csukuangfj:$HF_TOKEN@huggingface.co/csukuangfj/sherpa-onnx-libs main

      - name: Release pre-compiled binaries and libs for linux x64
        if: (github.repository_owner == 'csukuangfj' || github.repository_owner == 'k2-fsa') && github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          overwrite: true
          file: sherpa-onnx-*.tar.bz2
