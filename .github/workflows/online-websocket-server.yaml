name: online-websocket

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/online-websocket-server.yaml'
      - '.github/scripts/test-online-websocket.sh'
      - 'CMakeLists.txt'
      - 'cmake/**'
      - 'sherpa-onnx/csrc/*'
      - 'sherpa-onnx/c-api/*'
      - 'ffmpeg-examples/**'
      - 'c-api-examples/**'

  pull_request:
    types: [labeled]
    paths:
      - '.github/workflows/online-websocket-server.yaml'
      - '.github/scripts/test-online-websocket.sh'
      - 'CMakeLists.txt'
      - 'cmake/**'
      - 'sherpa-onnx/csrc/*'
      - 'sherpa-onnx/c-api/*'
      - 'ffmpeg-examples/**'
      - 'c-api-examples/**'

concurrency:
  group: online-websocket-${{ github.ref }}
  cancel-in-progress: true

jobs:
  online-websocket:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - name: Display number of CPU cores
        shell: bash
        run: |
          echo "Number of CPU cores:  ${{ steps.cpu-cores.outputs.count }}"

      - name: Configure CMake
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos') 
        shell: bash
        run: |
          mkdir build
          cd build
          cmake -D CMAKE_BUILD_TYPE=Release ..
          make -j2

      - name: Build sherpa-onnx
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          mkdir build
          cd build
          cmake -T ${{ matrix.toolset-version}},host=x64 -A x64 -D CMAKE_BUILD_TYPE=Release ..
          cmake --build . --config Release -- -m:2

      - name: Test online transducer
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos') 
        shell: bash
        run: |
          export PATH=$PWD/build/bin:$PATH
          export SERVER_EXE=sherpa-onnx-online-websocket-server
          export CLIENT_EXE=sherpa-onnx-online-websocket-client

          .github/scripts/test-online-websocket.sh
