name: release-go

on:
  push:
    branches:
      - go-api-2
    tags:
      - '*'

  workflow_dispatch:
    inputs:
      version:
        description: "Version informationï¼ˆe.g., 1.5.3) or auto"
        required: true

env:
  VERSION:
    |- # Enter release tag name or version name in workflow_dispatch. Appropriate version if not specified
    ${{ github.event.release.tag_name || github.event.inputs.version || 'auto' }}

concurrency:
  group: release-go-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux-x86_64_wheel:
    if: github.repository_owner == 'k2-fsa' || github.repository_owner == 'csukuangfj'
    name: Build Linux x86_64 lib on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: SSH to GitHub
        run: |
          mkdir -p ~/.ssh/
          cp scripts/go/ssh_config ~/.ssh/config
          echo "${{ secrets.MY_GITHUB_SSH_KEY }}" > ~/.ssh/github && chmod 600 ~/.ssh/github
          ssh github.com || true
          rm ~/.ssh/id_rsa

      # see https://cibuildwheel.readthedocs.io/en/stable/changelog/
      # for a list of versions
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_BEFORE_BUILD: "pip install -U cmake numpy"
          CIBW_BUILD: "cp38-*64"
          CIBW_SKIP: "cp27-* cp35-* cp36-* *-win32 pp* *-musllinux* *-manylinux_i686"
          CIBW_BUILD_VERBOSITY: 3
          CIBW_ENVIRONMENT_LINUX: LD_LIBRARY_PATH='/project/build/bdist.linux-x86_64/wheel/sherpa_onnx/lib'

      - name: Display wheels
        shell: bash
        run: |
          ls -lh ./wheelhouse/*.whl
          unzip -l ./wheelhouse/*.whl

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-wheels
          path: ./wheelhouse/*.whl

  linux-x86_64:
    name: Linux x86_64
    runs-on: ubuntu-latest
    needs: linux-x86_64_wheel

    steps:
      - uses: actions/checkout@v2

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh/
          cp scripts/go/ssh_config ~/.ssh/config
          echo "${{ secrets.MY_GITHUB_SSH_KEY }}" > ~/.ssh/github && chmod 600 ~/.ssh/github
          ssh github.com || true

      - name: Retrieve artifact from ubuntu-latest
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-wheels
          path: ./linux

      - name: Display wheels
        shell: bash
        run: |
          tree .

      - name: Unzip Ubuntu wheels
        shell: bash
        run: |
          cd linux
          unzip ./*.whl
          tree .

      - name: Release go
        shell: bash
        run: |
          ./scripts/go/release.sh
