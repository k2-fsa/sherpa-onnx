name: export-kitten-to-onnx

on:
  push:
    branches:
      - kitten-tts

  workflow_dispatch:

concurrency:
  group: export-kitten-to-onnx-${{ github.ref }}
  cancel-in-progress: true

jobs:
  export-kitten-to-onnx:
    if: github.repository_owner == 'k2-fsa' || github.repository_owner == 'csukuangfj'
    name: export kitten ${{ matrix.version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        shell: bash
        run: |
          pip install "numpy<=1.26.4" onnx==1.16.0 onnxruntime==1.17.1 librosa soundfile piper_phonemize -f https://k2-fsa.github.io/icefall/piper_phonemize.html

      - name: Run
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        shell: bash
        run: |
          cd scripts/kitten-tts/nano_v0_1
          ./run.sh

      - name: Collect results
        shell: bash
        run: |
          curl -SL -O https://github.com/k2-fsa/sherpa-onnx/releases/download/tts-models/espeak-ng-data.tar.bz2
          tar xf espeak-ng-data.tar.bz2
          rm espeak-ng-data.tar.bz2

          src=scripts/kitten-tts/nano_v0_1

          d=kitten-nano-en-v0_1-fp16

          mkdir $d
          cp -a LICENSE $d/LICENSE
          cp -a espeak-ng-data $d/
          cp -v $src/model.fp16.onnx $d/model.fp16.onnx
          cp -v $src/voices.bin $d/
          cp -v $src/tokens.txt $d/
          cp -v $src/../README.md $d/README.md
          ls -lh $d/
          tar cjfv $d.tar.bz2 $d

          ls -lh $d.tar.bz2

      - name: Release
        if: github.repository_owner == 'csukuangfj'
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: ./*.tar.bz2
          overwrite: true
          repo_name: k2-fsa/sherpa-onnx
          repo_token: ${{ secrets.UPLOAD_GH_SHERPA_ONNX_TOKEN }}
          tag: tts-models

      - name: Release
        if: github.repository_owner == 'k2-fsa'
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: ./*.tar.bz2
          overwrite: true
          tag: tts-models

      - name: Publish to huggingface
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        uses: nick-fields/retry@v3
        with:
          max_attempts: 20
          timeout_seconds: 200
          shell: bash
          command: |
            git config --global user.email "csukuangfj@gmail.com"
            git config --global user.name "Fangjun Kuang"

            dirs=(
              kitten-nano-en-v0_1-fp16
            )

            export GIT_LFS_SKIP_SMUDGE=1
            export GIT_CLONE_PROTECTION_ACTIVE=false

            for d in ${dirs[@]}; do
              rm -rf huggingface

              git clone https://csukuangfj:$HF_TOKEN@huggingface.co/csukuangfj/$d huggingface
              cd huggingface
              rm -rf ./*

              git lfs track "*.onnx"
              git lfs track af_dict
              git lfs track ar_dict
              git lfs track cmn_dict
              git lfs track da_dict en_dict fa_dict hu_dict ia_dict it_dict lb_dict phondata ru_dict ta_dict
              git lfs track ur_dict yue_dict

              cp -a ../$d/* ./

              git add .

              ls -lh

              git status

              git commit -m "add models"
              git push https://csukuangfj:$HF_TOKEN@huggingface.co/csukuangfj/$d main || true
            done
