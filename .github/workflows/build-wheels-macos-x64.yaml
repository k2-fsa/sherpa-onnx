name: build-wheels-macos-x64

on:
  push:
    branches:
      - wheel
  workflow_dispatch:

env:
  SHERPA_ONNX_IS_IN_GITHUB_ACTIONS: 1

concurrency:
  group: build-wheels-macos-x64-${{ github.ref }}
  cancel-in-progress: true

jobs:
  core:
    runs-on: ${{ matrix.os }}
    name: core
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update version
        shell: bash
        run: |
          ./new-release.sh
          git diff .
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install cibuildwheel
        shell: bash
        run: |
          python3 -m pip install cibuildwheel

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: macos-latest-sherpa-onnx-core

      - name: Configure CMake
        shell: bash
        run: |
          export CMAKE_CXX_COMPILER_LAUNCHER=ccache
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          cmake --version

          mkdir build
          cd build
          lib_type=${{ matrix.lib_type }}
          if [[ $lib_type == "static" ]]; then
            BUILD_SHARED_LIBS=OFF
          else
            BUILD_SHARED_LIBS=ON
          fi

          cmake \
            -D-DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 \
            -D BUILD_SHARED_LIBS=ON \
            -D CMAKE_BUILD_TYPE=Release \
            -D CMAKE_OSX_ARCHITECTURES='x86_64' \
            -D CMAKE_INSTALL_PREFIX=./install \
            ..

      - name: Build sherpa-onnx for macos
        shell: bash
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

          cd build
          make -j2
          make install

          ls -lh lib
          ls -lh bin

          file ./bin/sherpa-onnx

          rm -fv ./install/include/cargs.h
          rm -fv ./install/lib/cargs.h
          rm -fv ./install/lib/libcargs.dylib
          rm -fv ./install/lib/libcargs.a
          rm -rfv ./install/lib/pkgconfig

      - name: Copy files
        shell: bash
        run: |
          echo 'sherpa-onnx-core'
          mkdir -p scripts/wheel/sherpa-onnx-core/sherpa_onnx/lib
          cp -v ./build/install/lib/lib* ./scripts/wheel/sherpa-onnx-core/sherpa_onnx/lib

          mkdir -p ./scripts/wheel/sherpa-onnx-core/sherpa_onnx/include/sherpa-onnx/c-api
          cp -v ./build/install/include/sherpa-onnx/c-api/*.h ./scripts/wheel/sherpa-onnx-core/sherpa_onnx/include/sherpa-onnx/c-api



          echo 'sherpa-onnx-bin'

          mkdir -p ./scripts/wheel/sherpa-onnx-bin/bin
          cp -v ./build/install/bin/sherpa-onnx* ./scripts/wheel/sherpa-onnx-bin/bin

          pushd ./scripts/wheel/sherpa-onnx-bin
          python3 setup.py bdist_wheel --plat-name=manylinux2014_x86_64

          ls -lh dist

          popd

      - name: Build sherpa-onnx-core
        shell: bash
        run: |
          pushd ./scripts/wheel/sherpa-onnx-core
          python3 setup.py bdist_wheel --plat-name=macosx_10_15_x86_64

          ls -lh dist

          popd

      - name: Build sherpa-onnx-bin
        shell: bash
        run: |
          pushd ./scripts/wheel/sherpa-onnx-bin
          python3 setup.py bdist_wheel --plat-name=macosx_10_15_x86_64

          ls -lh dist

          popd

      - name: Collect wheels
        shell: bash
        run: |
          cp -v ./scripts/wheel/sherpa-onnx-core/dist/*.whl .
          cp -v ./scripts/wheel/sherpa-onnx-bin/dist/*.whl .

          ls -lh *.whl

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-core-macos-x64
          path: ./*.whl

  build_wheels_macos_x64:
    if: false
    name: ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13]
        python-version: ["cp38", "cp39", "cp310", "cp311", "cp312", "cp313"]

    steps:
      - uses: actions/checkout@v4

      - name: Update version
        shell: bash
        run: |
          ./new-release.sh
          git diff .

      # see https://cibuildwheel.readthedocs.io/en/stable/changelog/
      # for a list of versions
      - name: Build wheels
        if: matrix.python-version == 'cp37'
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_BUILD: "${{ matrix.python-version}}-* "
          CIBW_ENVIRONMENT: SHERPA_ONNX_CMAKE_ARGS="-DCMAKE_OSX_ARCHITECTURES='x86_64'"
          CIBW_ARCHS: "x86_64"
          CIBW_BUILD_VERBOSITY: 3

          #  Don't repair macOS wheels
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: ""

      - name: Build wheels
        if: matrix.python-version != 'cp37'
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_BUILD: "${{ matrix.python-version}}-* "
          CIBW_ENVIRONMENT: SHERPA_ONNX_CMAKE_ARGS="-DCMAKE_OSX_ARCHITECTURES='x86_64'"
          CIBW_ARCHS: "x86_64"
          CIBW_BUILD_VERBOSITY: 3

          #  Don't repair macOS wheels
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: ""

      - name: Display wheels
        shell: bash
        run: |
          ls -lh ./wheelhouse/

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.python-version }}
          path: ./wheelhouse/*.whl

      - name: Publish to huggingface
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        uses: nick-fields/retry@v3
        with:
          max_attempts: 20
          timeout_seconds: 200
          shell: bash
          command: |
            git config --global user.email "csukuangfj@gmail.com"
            git config --global user.name "Fangjun Kuang"

            rm -rf huggingface
            export GIT_LFS_SKIP_SMUDGE=1
            export GIT_CLONE_PROTECTION_ACTIVE=false

            SHERPA_ONNX_VERSION=$(grep "SHERPA_ONNX_VERSION" ./CMakeLists.txt  | cut -d " " -f 2  | cut -d '"' -f 2)
            echo "SHERPA_ONNX_VERSION $SHERPA_ONNX_VERSION"

            d=cpu/$SHERPA_ONNX_VERSION

            git clone https://csukuangfj:$HF_TOKEN@huggingface.co/csukuangfj/sherpa-onnx-wheels huggingface
            cd huggingface
            git fetch
            git pull
            git merge -m "merge remote" --ff origin main

            mkdir -p $d

            cp -v ../wheelhouse/*.whl $d/

            git status
            git add .
            git commit -m "add more wheels"
            git push https://csukuangfj:$HF_TOKEN@huggingface.co/csukuangfj/sherpa-onnx-wheels main

      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          opts='--break-system-packages'
          v=${{ matrix.python-version }}
          if [[ $v == cp37 || $v == cp38 || $v == cp39 ]]; then
            opts=''
          fi

          python3 -m pip install $opts --upgrade pip
          if [[ ${{ matrix.python-version }} == "cp37" ]]; then
            python3 -m pip install $opts wheel twine setuptools
          else
            python3 -m pip install $opts wheel twine==5.0.0 setuptools
          fi

          twine upload ./wheelhouse/*.whl
