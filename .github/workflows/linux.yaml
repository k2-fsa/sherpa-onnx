name: linux

on:
  push:
    branches:
      - master
    tags:
      - '*'
    paths:
      - '.github/workflows/linux.yaml'
      - '.github/scripts/test-online-transducer.sh'
      - '.github/scripts/test-offline-transducer.sh'
      - '.github/scripts/test-offline-ctc.sh'
      - 'CMakeLists.txt'
      - 'cmake/**'
      - 'sherpa-onnx/csrc/*'
      - 'sherpa-onnx/c-api/*'
      - 'c-api-examples/**'
  pull_request:
    branches:
      - master
    paths:
      - '.github/workflows/linux.yaml'
      - '.github/scripts/test-online-transducer.sh'
      - '.github/scripts/test-offline-transducer.sh'
      - '.github/scripts/test-offline-ctc.sh'
      - 'CMakeLists.txt'
      - 'cmake/**'
      - 'sherpa-onnx/csrc/*'
      - 'sherpa-onnx/c-api/*'
  release:
    types:
      - published

  workflow_dispatch:
    inputs:
      release:
        description: "Whether to release"
        type: boolean

env:
  RELEASE:
    |- # Release if there is a release tag name or a release flag in workflow_dispatch
    ${{ github.event.release.tag_name != '' || github.event.inputs.release == 'true' }}

concurrency:
  group: linux-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        build_type: [Release, Debug]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure CMake
        shell: bash
        run: |
          mkdir build
          cd build
          cmake -D CMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_INSTALL_PREFIX=./install ..

      - name: Build sherpa-onnx for ubuntu
        shell: bash
        run: |
          cd build
          make -j2
          make install

          ls -lh lib
          ls -lh bin

      - name: Display dependencies of sherpa-onnx for linux
        shell: bash
        run: |
          file build/bin/sherpa-onnx
          readelf -d build/bin/sherpa-onnx

      - name: Test offline CTC
        shell: bash
        run: |
          export PATH=$PWD/build/bin:$PATH
          export EXE=sherpa-onnx-offline

          .github/scripts/test-offline-ctc.sh

      - name: Test offline transducer
        shell: bash
        run: |
          export PATH=$PWD/build/bin:$PATH
          export EXE=sherpa-onnx-offline

          .github/scripts/test-offline-transducer.sh

      - name: Test online transducer
        shell: bash
        run: |
          export PATH=$PWD/build/bin:$PATH
          export EXE=sherpa-onnx

          .github/scripts/test-online-transducer.sh

      - name: Test online transducer (C API)
        shell: bash
        run: |
          export PATH=$PWD/build/bin:$PATH
          export EXE=decode-file-c-api

          .github/scripts/test-online-transducer.sh

      - name: Copy files
        if: env.RELEASE == 'true'
        shell: bash
        run: |
          SHERPA_ONNX_VERSION=v$(grep "SHERPA_ONNX_VERSION" ./CMakeLists.txt  | cut -d " " -f 2  | cut -d '"' -f 2)

          dst=sherpa-onnx-${SHERPA_ONNX_VERSION}-linux-x64
          mkdir $dst

          cp -a build/install/bin $dst/
          cp -a build/install/lib $dst/
          cp -a build/install/include $dst/

          tree $dst

          tar cjvf ${dst}.tar.bz2 $dst

      - name: Release pre-compiled binaries and libs for linux x64
        if: env.RELEASE == 'true' && matrix.build_type == 'Release'
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          overwrite: true
          file: sherpa-onnx-*linux-x64.tar.bz2
